/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;


import dao.FindById;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.PhieuXuat;
import model.PhieuXuatChiTiet;
import service.ConnectDB;
import table.TableCustom;

/**
 *
 * @author Admin
 */
public class XuatKho extends javax.swing.JPanel {

    /**
     * Creates new form NhapKho
     */

    public static PhieuXuat phieuXuat;
    public static PhieuXuatChiTiet phieuXuatChiTiet;
    public static int idState;
    public static String code;
    private DefaultTableModel tblPhieuXuatModel;
    private DefaultTableModel tblPhieuXuatChiTietModel;
    private boolean selectTable = false;
    
    public XuatKho() throws SQLException {
        initComponents();
        initTable("PhieuXuat");
        initTable("PhieuXuatChiTiet");
        loadDataToTable("");
//        loadDataToTableChiTiet("");
        TableCustom.apply(jScrollPane1, TableCustom.TableType.DEFAULT); //or MULTI_LINE
        TableCustom.apply(jScrollPane2, TableCustom.TableType.DEFAULT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        search = new javax.swing.JPanel();
        txtsearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        table = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuXuat = new javax.swing.JTable();
        txtphieuxuat = new javax.swing.JLabel();
        txtPhieuXuatChiTiet = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPhieuXuatChiTiet = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 204));

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-search-more-30.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-add-30.png"))); // NOI18N
        btnAdd.setBorderPainted(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-pencil-30.png"))); // NOI18N
        btnEdit.setBorderPainted(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-available-updates-30.png"))); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchLayout = new javax.swing.GroupLayout(search);
        search.setLayout(searchLayout);
        searchLayout.setHorizontalGroup(
            searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchLayout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addContainerGap())
        );
        searchLayout.setVerticalGroup(
            searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtsearch)
                    .addGroup(searchLayout.createSequentialGroup()
                        .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresh)
                            .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnAdd)
                                .addComponent(btnEdit)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        table.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblPhieuXuat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblPhieuXuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "ID", "Mã phiếu xuất", "Ngày xuất", "Khách hàng", "Nhân viên", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhieuXuat.setAlignmentX(1.0F);
        tblPhieuXuat.setAlignmentY(1.0F);
        tblPhieuXuat.setShowGrid(true);
        tblPhieuXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuXuatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieuXuat);
        if (tblPhieuXuat.getColumnModel().getColumnCount() > 0) {
            tblPhieuXuat.getColumnModel().getColumn(0).setPreferredWidth(5);
            tblPhieuXuat.getColumnModel().getColumn(1).setPreferredWidth(20);
            tblPhieuXuat.getColumnModel().getColumn(2).setPreferredWidth(30);
            tblPhieuXuat.getColumnModel().getColumn(3).setPreferredWidth(30);
            tblPhieuXuat.getColumnModel().getColumn(4).setPreferredWidth(50);
            tblPhieuXuat.getColumnModel().getColumn(5).setPreferredWidth(30);
            tblPhieuXuat.getColumnModel().getColumn(6).setPreferredWidth(70);
        }

        txtphieuxuat.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        txtphieuxuat.setForeground(new java.awt.Color(51, 51, 51));
        txtphieuxuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtphieuxuat.setText("Phiếu xuất : {Id: Loading ; Mã: Loading}");

        txtPhieuXuatChiTiet.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        txtPhieuXuatChiTiet.setForeground(new java.awt.Color(51, 51, 51));
        txtPhieuXuatChiTiet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtPhieuXuatChiTiet.setText("Phiếu xuất chi tiết");

        tblPhieuXuatChiTiet.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblPhieuXuatChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Tên vật tư", "Số lượng", "Đơn giá", "Thành tiền", "Vị tri hàng trong kho", "Ghi chú"
            }
        ));
        tblPhieuXuatChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuXuatChiTietMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPhieuXuatChiTiet);

        javax.swing.GroupLayout tableLayout = new javax.swing.GroupLayout(table);
        table.setLayout(tableLayout);
        tableLayout.setHorizontalGroup(
            tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(txtphieuxuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPhieuXuatChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        tableLayout.setVerticalGroup(
            tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtphieuxuat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPhieuXuatChiTiet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblPhieuXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuXuatMouseClicked
        // TODO add your handling code here:
        selectTable = true;
        try {
            int row = tblPhieuXuat.getSelectedRow();
            if (row >= 0) {
                int id = (int) tblPhieuXuat.getValueAt(row, 1);
                phieuXuat = new FindById().phieuXuat(id);
                code = phieuXuat.getCode();
                idState = phieuXuat.getId();
                System.out.println("id phieu xuat: "+idState);
                txtphieuxuat.setText("Phiếu xuất: {id:"+idState+"} ; {code:"+code+"}");
                System.out.println(phieuXuat.toString());
                loadDataToTableChiTiet(idState, "");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblPhieuXuatMouseClicked

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
       if (selectTable == true) {
            PopupPhieuXuat popupPhieuXuat = null;
            try {
                popupPhieuXuat = new PopupPhieuXuat();
            } catch (Exception ex) {
                Logger.getLogger(NhapKho.class.getName()).log(Level.SEVERE, null, ex);
            }
            popupPhieuXuat.setVisible(true);
            popupPhieuXuat.setHideAdd();
        } else {
            try {
                PopupPhieuXuatChiTiet popupPhieuXuatChiTiet = new PopupPhieuXuatChiTiet();
                popupPhieuXuatChiTiet.setVisible(true);
                popupPhieuXuatChiTiet.setHideAdd();
            } catch (SQLException ex) {
                Logger.getLogger(NhapKho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(NhapKho.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        PopupPhieuXuat popupPhieuXuat = null;
        try {
            popupPhieuXuat = new PopupPhieuXuat();
        } catch (Exception ex) {
            Logger.getLogger(NhapKho.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (selectTable == false) {
            popupPhieuXuat.setVisible(true);
            popupPhieuXuat.setHideEditDelete();
        } else{
            try {
                PopupPhieuXuatChiTiet popupPhieuXuatChiTiet = new PopupPhieuXuatChiTiet();
                popupPhieuXuatChiTiet.setVisible(true);
                popupPhieuXuatChiTiet.setHideEditDelete();
            } catch (SQLException ex) {
                Logger.getLogger(NhapKho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(NhapKho.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblPhieuXuatChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuXuatChiTietMouseClicked
        // TODO add your handling code here:
        selectTable = false;
         try {
            int row = tblPhieuXuatChiTiet.getSelectedRow();
            if (row >= 0) {
                int id = (int) tblPhieuXuatChiTiet.getValueAt(row, 1);
                phieuXuatChiTiet = new FindById().phieuXuatChiTiet(id);
                txtPhieuXuatChiTiet.setText("Phiếu nhập chi tiết: {Id:"+Integer.toString(id)+"}");
                System.out.println(phieuXuatChiTiet.toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblPhieuXuatChiTietMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            loadDataToTable(txtsearch.getText());
        } catch (SQLException ex) {
            Logger.getLogger(XuatKho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        try {
            loadDataToTable("");
            loadDataToTableChiTiet(idState, "");
        } catch (SQLException ex) {
            Logger.getLogger(NhapKho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel search;
    private javax.swing.JPanel table;
    private javax.swing.JTable tblPhieuXuat;
    private javax.swing.JTable tblPhieuXuatChiTiet;
    private javax.swing.JLabel txtPhieuXuatChiTiet;
    private javax.swing.JLabel txtphieuxuat;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables

    private void initTable(String nameTable) {
        switch (nameTable) {
            case "PhieuXuat":
                tblPhieuXuatModel = new DefaultTableModel();
                tblPhieuXuatModel.setColumnIdentifiers(new String[]{"STT","ID","Mã Code","Ngày Xuất","Khách Hàng","Nhân Viên","Tổng Tiền","Ghi Chú"});
                tblPhieuXuat.setModel(tblPhieuXuatModel);
                break;
            case "PhieuXuatChiTiet":
                tblPhieuXuatChiTietModel = new DefaultTableModel();
                tblPhieuXuatChiTietModel.setColumnIdentifiers(new String[]{"STT","ID","Vật Tư","Đơn giá","Số Lượng","Thành Tiền","Kho hàng","Vị Trí Vật Tư","Ghi Chú"});
                tblPhieuXuatChiTiet.setModel(tblPhieuXuatChiTietModel);
                break;
            default:
                throw new AssertionError();
        }
    }

    public void loadDataToTable(String key) throws SQLException {
        Connection conn = null;
        try {
            DecimalFormat x = new DecimalFormat("###,###,###");
            String sql = "SELECT PHIEUXUAT.Id, Code, OrderDepartureDate, CustomerName, CONCAT_WS(' ', EmployeeLastName, EmployeeFirstName) AS hoten, TotalAmount ,Description \n" +
                        "FROM dbo.PHIEUXUAT LEFT JOIN dbo.KHACHHANG\n" +
                        "ON KHACHHANG.Id = PHIEUXUAT.CustomerId\n" +
                        "LEFT JOIN dbo.NHANVIEN ON NHANVIEN.Id = PHIEUXUAT.EmployeeId\n" +
                        "WHERE PHIEUXUAT.IsDeleted = 0 AND (CustomerName LIKE N'%"+key+"%' OR CONCAT_WS(' ', EmployeeLastName, EmployeeFirstName) LIKE N'%"+key+"%')";
            conn = ConnectDB.getConnection();
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            int i = 1;
            tblPhieuXuatModel.setRowCount(0);
            while (rs.next()) {                
                tblPhieuXuatModel.addRow(new Object[]{
                    i++,
                    rs.getInt("Id"),
                    rs.getString("Code"),
                    rs.getDate("OrderDepartureDate"),
                    rs.getString("CustomerName"),
                    rs.getString("hoten"),
                    x.format( rs.getInt("TotalAmount")),
                    rs.getString("Description")
                });
            }
            tblPhieuXuatModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
        } finally{
            conn.close();
        }
    }

    private void loadDataToTableChiTiet(int idPhieuXuat, String key) throws SQLException {
        System.out.println("load data phieu xuat chi tiet");
        Connection conn = null;
        try {
            DecimalFormat x = new DecimalFormat("###,###,###");
            String sql = "SELECT PHIEUXUATCHITIET.Id, SuppliesName, SupplyAmount, PHIEUXUATCHITIET.Quantity, TotalAmount, KHOHANG.Name,VITRIKHOHANG.Name AS namevtkho, PHIEUXUATCHITIET.Description \n" +
                        "FROM dbo.PHIEUXUATCHITIET\n" +
                        "LEFT JOIN dbo.HANGTONKHO ON dbo.PHIEUXUATCHITIET.SupplyId = dbo.HANGTONKHO.Id\n" +
                        "LEFT JOIN dbo.VATTU ON VATTU.Id = HANGTONKHO.SupplyId\n" +
                        "LEFT JOIN dbo.VITRIKHOHANG ON VITRIKHOHANG.Id = PHIEUXUATCHITIET.LocationId\n" +
                        "LEFT JOIN dbo.KHOHANG ON KHOHANG.Id = VITRIKHOHANG.WarehouseId\n" +
                        "WHERE PHIEUXUATCHITIET.IsDeleted = 0 AND SuppliesName LIKE N'%%' AND DelieveryDocketId ="+idPhieuXuat;
            conn = ConnectDB.getConnection();
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            int i = 1;
            tblPhieuXuatChiTietModel.setRowCount(0);
            while (rs.next()) {                
                tblPhieuXuatChiTietModel.addRow(new Object[]{
                    i++,
                    rs.getInt("Id"),
                    rs.getString("SuppliesName"),// ten vat tu
                    x.format(rs.getInt("SupplyAmount")),
                    x.format(rs.getInt("Quantity")),
                    x.format(rs.getInt("TotalAmount")),
                    rs.getString("Name"),
                    rs.getString("namevtkho"),
                    rs.getString("Description")
                });
            }
            tblPhieuXuatChiTietModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
        } finally{
            conn.close();
        }
    }
}
